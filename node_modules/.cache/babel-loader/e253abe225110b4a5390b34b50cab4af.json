{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeremiah\\\\Thinkful\\\\Pomodoro\\\\src\\\\pomodoro\\\\Display.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nconst Display = ({\n  isTimerRunning,\n  focusDuration,\n  breakDuration,\n  session\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 1\n    }\n  }, session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : secondsToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  })))));\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/Jeremiah/Thinkful/Pomodoro/src/pomodoro/Display.js"],"names":["React","secondsToDuration","minutesToDuration","Display","isTimerRunning","focusDuration","breakDuration","session","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACbC,EAAAA,cADa;AAEbC,EAAAA,aAFa;AAGbC,EAAAA,aAHa;AAIbC,EAAAA;AAJa,CAAD,KAKV;AACL,sBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,OAAO,iBACR;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GAAgCN,iBAAiB,CAACG,aAAD,CAAjD,GAAmEJ,iBAAiB,CAACK,aAAD,CADvF,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,CAACM,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,aAAV,CADpB,eAJF,CADA,CAFA,EAaCF,OAAO,iBAAM;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACd;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADc,CAbd,CADC;AA+BA,CArCD;;AAuCA,eAAeR,OAAf","sourcesContent":["import React from \"react\"\r\nimport {secondsToDuration, minutesToDuration} from \"../utils/duration\"\r\n\r\nconst Display = ({\r\n    isTimerRunning,\r\n    focusDuration,\r\n    breakDuration,\r\n    session\r\n}) => {\r\n return (\r\n<div>\r\n{session && (\r\n<div className=\"row mb-2\">\r\n<div className=\"col\">\r\n  <h2 data-testid=\"session-title\">\r\n    {session?.label === \"Focusing\" ? minutesToDuration(focusDuration) : secondsToDuration(breakDuration)}\r\n  </h2>\r\n  <p className=\"lead\" data-testid=\"session-sub-title\">\r\n    {secondsToDuration(session?.timeRemaining) } remaining\r\n  </p>\r\n</div>\r\n</div>\r\n)}\r\n{session && ( <div className=\"row mb-2\">\r\n<div className=\"col\">\r\n  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n    <div\r\n      className=\"progress-bar\"\r\n      role=\"progressbar\"\r\n      aria-valuemin=\"0\"\r\n      aria-valuemax=\"100\"\r\n      aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n      style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n    />\r\n    </div>\r\n    </div>\r\n    </div>\r\n)}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}