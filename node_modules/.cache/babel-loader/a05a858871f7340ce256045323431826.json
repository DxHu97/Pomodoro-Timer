{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeremiah\\\\Thinkful\\\\Pomodoro\\\\src\\\\pomodoro\\\\Display.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nconst Display = ({\n  isTimerRunning,\n  focusDuration,\n  breakDuration,\n  session\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), !isTimerRunning && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  }, \"PAUSED\"))), session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? 100 - 10 / 6 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / focusDuration : 100 - 10 / 6 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / breakDuration // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${(session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? 100 - 10 / 6 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / focusDuration : 100 - 10 / 6 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / breakDuration}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/Jeremiah/Thinkful/Pomodoro/src/pomodoro/Display.js"],"names":["React","secondsToDuration","minutesToDuration","Display","isTimerRunning","focusDuration","breakDuration","session","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,aAAlB;AAAiCC,EAAAA,aAAjC;AAAgDC,EAAAA;AAAhD,CAAD,KAA+D;AAC7E,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,iBACN;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEC,KADZ,UACuB,GADvB,EAEG,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GACGN,iBAAiB,CAACG,aAAD,CADpB,GAEGH,iBAAiB,CAACI,aAAD,CAJvB,EAIwC,GAJxC,YADF,eAQE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,CAACM,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,aAAV,CADpB,eARF,EAWG,CAACL,cAAD,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXtB,CADF,CAFJ,EAkBGG,OAAO,iBACN;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACE,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GACI,MAAQ,KAAK,CAAN,IAAWD,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEE,aAApB,CAAD,GAAsCJ,aADhD,GAEI,MAAQ,KAAK,CAAN,IAAWE,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEE,aAApB,CAAD,GAAsCH,aARpD,CASI;AATJ;AAUE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAG,GACN,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GACI,MACE,KAAK,CAAN,IAAWD,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEE,aAApB,CAAD,GAAsCJ,aAF1C,GAGI,MACE,KAAK,CAAN,IAAWE,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEE,aAApB,CAAD,GAAsCH,aAC3C;AAPI,KAVT,CAkBK;AAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAnBJ,CADF;AAiDD,CAlDD;;AAoDA,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\r\n\r\nconst Display = ({ isTimerRunning, focusDuration, breakDuration, session }) => {\r\n  return (\r\n    <div>\r\n      {session && (\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for{\" \"}\r\n              {session?.label === \"Focusing\"\r\n                ? minutesToDuration(focusDuration)\r\n                : minutesToDuration(breakDuration)}{\" \"}\r\n              minutes\r\n            </h2>\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n            {!isTimerRunning && <h1>PAUSED</h1>}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {session && (\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={\r\n                  session?.label === \"Focusing\"\r\n                    ? 100 - ((10 / 6) * session?.timeRemaining) / focusDuration\r\n                    : 100 - ((10 / 6) * session?.timeRemaining) / breakDuration\r\n                } // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{\r\n                  width: `${\r\n                    session?.label === \"Focusing\"\r\n                      ? 100 -\r\n                        ((10 / 6) * session?.timeRemaining) / focusDuration\r\n                      : 100 -\r\n                        ((10 / 6) * session?.timeRemaining) / breakDuration\r\n                  }%`,\r\n                }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"]},"metadata":{},"sourceType":"module"}